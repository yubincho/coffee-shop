plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.10'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	// 아임포트 관련
	maven { url 'https://jitpack.io' }
}

dependencies {
	// jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	//Querydsl 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	// oauth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	//Jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// kafka
	implementation 'org.springframework.kafka:spring-kafka'

	implementation 'org.springframework.boot:spring-boot-starter-web'

	// 아임포트 관련 //
	// https://mvnrepository.com/artifact/com.github.iamport/iamport-rest-client-java
	implementation 'com.github.iamport:iamport-rest-client-java:0.2.23'
	// https://mvnrepository.com/artifact/com.squareup.retrofit2/adapter-rxjava2
	implementation group: 'com.squareup.retrofit2', name: 'adapter-rxjava2', version: '2.9.0'
	// https://mvnrepository.com/artifact/com.google.code.gson/gson
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.9'
	// https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
	implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.9.3'
	// https://mvnrepository.com/artifact/com.squareup.retrofit2/converter-gson
	implementation group: 'com.squareup.retrofit2', name: 'converter-gson', version: '2.3.0'

	// mysql
	implementation 'mysql:mysql-connector-java:8.0.33'
	runtimeOnly 'com.mysql:mysql-connector-j'

	// h2
//	implementation 'com.h2database:h2'
//	runtimeOnly 'com.h2database:h2'

	//Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// https://mvnrepository.com/artifact/org.modelmapper/modelmapper
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.4.4'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
	testImplementation 'org.assertj:assertj-core:3.23.1'

	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile).configureEach {
	options.generatedSourceOutputDirectory = file(generated)
}

// java source set 에 querydsl QClass 위치 추가
 sourceSets {
	 main.java.srcDirs += "$projectDir/build/generated"
 }

// gradle clean 시에 QClass 디렉토리 삭제
clean {
	delete file('src/main/generated')
}
